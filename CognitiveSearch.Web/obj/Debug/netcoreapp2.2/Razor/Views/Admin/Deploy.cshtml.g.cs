#pragma checksum "D:\AIPlatform\end-to-end-solutions\kma\src\Web UI Template\CognitiveSearch.Web\Views\Admin\Deploy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8c67805a5c1d9d82ce44cd91b5f59692540cf228"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Deploy), @"mvc.1.0.view", @"/Views/Admin/Deploy.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Admin/Deploy.cshtml", typeof(AspNetCore.Views_Admin_Deploy))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\AIPlatform\end-to-end-solutions\kma\src\Web UI Template\CognitiveSearch.Web\Views\_ViewImports.cshtml"
using CognitiveSearch.Web;

#line default
#line hidden
#line 2 "D:\AIPlatform\end-to-end-solutions\kma\src\Web UI Template\CognitiveSearch.Web\Views\_ViewImports.cshtml"
using CognitiveSearch.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8c67805a5c1d9d82ce44cd91b5f59692540cf228", @"/Views/Admin/Deploy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9c88f331fca975061b5114e04af26a2c25892e03", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Deploy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\AIPlatform\end-to-end-solutions\kma\src\Web UI Template\CognitiveSearch.Web\Views\Admin\Deploy.cshtml"
  
    ViewData["Title"] = "Deploy";

#line default
#line hidden
            BeginContext(44, 4231, true);
            WriteLiteral(@"
    <main role=""main"" class=""m-5"">
        <h3>Azure Cognitive Search Solution Deployment</h3>

        <h5>Welcome to the Cognitive Services Knowledge Mining Deployment tool.</h5>

        <p>
            You can use this tool to deploy all the items necessary to have an Azure Resource Group with all the Azure resources necessary
            to implement a working Cognitive Search website, using custom data sources and data, as well as a fully customizable UI.
        </p>

        <h5>Before you Begin</h5>

        <p>You will need the following items before you can utilize this deployment tool:</p>

        <ul>
            <li>Paid Azure Subscription</li>
            <li>Azure Application Client Id and Secret with access to your subscription to create a resource group and all the necessary items</li>
            <li>Bing Instance (for the Bing Skill)</li>
        </ul>
        
        <h5>Configuration</h5>

        <p>Everything is driven by the configuration.{mode}.json file.  T");
            WriteLiteral(@"his file contains all the settings the EXE will need to deploy the various resources to the items created in the ARM template.</p>

        <p>
            The {mode} paramter is driven by the app.config (KnowledgeMiningDeployer.exe.config) and is default set to ""production"".  Therefore the tool will look for the **configuration.production.json** file in the same directory.
        </p>

        <p>
            Everything the tool needs to do the deployment is inside the configuration file.  You will need the following items added to the configuration file based on the following major sections:
        </p>
        
        <ul>
            <li>Configuration variables</li>
            <li>Azure Search Skillsets</li>
            <li>Data Sources</li>
        </ul>

        <h5>Configuration variables</h5>

        <pre id=""json""></pre>
    </main>

<script type=""text/javascript"">
    $(document).ready(function () {
        var data = {
            ""ResourceGroupName"": ""[recource-group-n");
            WriteLiteral(@"ame]"",  //name of resource group you want to deploy too
            ""ResourcePrefix"": ""[resource-group-prefix]"",  //a prefix added to all resources created
            ""SubscriptionId"": ""[your-azure-subscription-id]"",  //the azure subscription id
            ""AdminAzureClientId"": ""[your-azure-app-client-id]"", //the azure client id of the azure application
            ""AdminAzureClientSecret"": ""[your-azure-app-client-secret]"",  //the azure client secret of the azure application
            ""TenantId"": ""[your-azure-active-directory-tenant-id]"",  //the AAD tenantid
            ""Region"": ""[target-region]"",  //the region you want to deploy items too
            ""SearchServiceApiVersion"": ""2019-05-06-Preview"",  //the search service application version
            ""DeployMain"": false,  //whether to deploy the main ARM template
            ""DoDeployments"": false,  //whether to deploy the Web, API and function zip files
            ""UseSampleData"": ""true"", //whether to import the sample data
            ""Bl");
            WriteLiteral(@"obStorageConnectionString"": ""[your-blob-storage-account-connection-string]"",  //the storage account you want to point to for indexing
            ""StorageContainer"": ""documents"",  //the container in the storage account to index
            ""ConfigFilePath"": ""https://raw.githubusercontent.com/solliancenet/Cognitive-search-JFK/knowledge-mining/00%20-%20Resource%20Deployment/KnowledgeMiningDeployer/KnowledgeMiningDeployer/configuration.development.json"",//an external config file you might want to reference when running from ARM deployment
            ""CustomDataZip"": ""https://raw.githubusercontent.com/solliancenet/Cognitive-search-JFK/knowledge-mining/00%20-%20Resource%20Deployment/KnowledgeMiningDeployer/KnowledgeMiningDeployer/Deployment/CustomDocuments.zip"", //your custom data set your want to pre-populate in your storage account and search index
            ""Username"": ""s2admin"", //the username of the deployment VM and SQL server
            ""Password"": ""******"",  //the password of the deployment VM and");
            WriteLiteral(" SQL server\r\n        }\r\n\r\n\r\n        document.getElementById(\"json\").innerHTML = JSON.stringify(data, undefined, 2);\r\n    });\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.ApplicationInsights.AspNetCore.JavaScriptSnippet JavaScriptSnippet { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
